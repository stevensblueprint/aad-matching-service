import pandas as pd
import random

from .read_directory import read_directory

def generate_responses(mentee_directory, mentor_directory):
  """
  This function takes a directory of mentees and a directory of mentors 
  and returns a csv of matching form responses. The schema for the matching
  form can be found in DOCS.md
  """

  # First 5 columns are autogenerated by Microsoft Forms so can be filler values
  matching_form_schema = {
        'Id': [],
        'Start time': [],
        'Completion time': [],
        'Email': [],
        'Name': [],
        'KIN Mentorship ID (Link to Spreadsheet)': [], 
        'First Name': [],
        'Last Name': [],
        'Email Address': [],
        'Please indicate if you have a preference for what gender your mentor/mentee is:': [],
        'How important is accessing and developing a professional AAPI network?': [],
        'How open are you to exploring topics outside of your immediate career or academic focus in the mentorship?': [],
        'How much do you value a structured mentoring relationship (e.g., goal setting, progress tracking)?': [],
        'How important is frequent communication (e.g., weekly or bi-weekly) in a mentoring relationship?': [],
        'Select if you are a Kin Mentor or Kin Mentee': [],
        'Would you be open to the possibility of having 2 Kin Mentees?': [],
        'What industries can you provide mentorship on?': [],
        'How comfortable do you feel providing guidance on professional skills such as resume writing, interviewing, personal brand, presentation skills, etc.?': [],
        'How confident do you feel in guiding your mentee in securing an internship or full-time employment opportunity?': [],
        'Who is your #1 Kin Mentee preference?': [],
        'Who is your #2 Kin Mentee preference?': [],
        'Who is your #3 Kin Mentee preference?': [],
        'Who is your #4 Kin Mentee preference?': [],
        'Who is your #5 Kin Mentee preference?': [],
        'Who is your #6 Kin Mentee preference?': [],
        'Who is your #7 Kin Mentee preference?': [],
        'Who is your #8 Kin Mentee preference?': [],
        'Who is your #9 Kin Mentee preference?': [],
        'Who is your #10 Kin Mentee preference?': [],
        'Who is your #11 Kin Mentee preference?': [],
        'Who is your #12 Kin Mentee preference?': [],
        'Who is your #13 Kin Mentee preference?': [],
        'Who is your #14 Kin Mentee preference?': [],
        'Who is your #15 Kin Mentee preference?': [],
        'Would you be open to the possibility of having a 1 Kin Mentor: 2 Kin Mentee mentorship partnership?': [],
        'What industries are you interested in receiving mentorship on?': [],
        'How important is enhancing professional skills (resume writing, interviewing, personal brand, presentation skills, etc.)?': [],
        'How important is securing an internship or full-time employment opportunity?': [],
        'Who is your #1 Kin Mentor preference?': [],
        'Who is your #2 Kin Mentor preference?': [],
        'Who is your #3 Kin Mentor preference?': [],
        'Who is your #4 Kin Mentor preference?': [],
        'Who is your #5 Kin Mentor preference?': [],
        'Who is your #6 Kin Mentor preference?': [],
        'Who is your #7 Kin Mentor preference?': [],
        'Who is your #8 Kin Mentor preference?': [],
        'Who is your #9 Kin Mentor preference?': [],
        'Who is your #10 Kin Mentor preference?': [],
        'Who is your #11 Kin Mentor preference?': [],
        'Who is your #12 Kin Mentor preference?': [],
        'Who is your #13 Kin Mentor preference?': [],
        'Who is your #14 Kin Mentor preference?': [],
        'Who is your #15 Kin Mentor preference?': [],
        'How comfortable do you feel in asking for help in achieving your academic and career goals?': [],
        'How prepared do you feel to take the next steps in your career?': [],
        'How connected do you feel to a network of professionals to achieve your academic and career goals?': [],
        'As an AAPI student, how empowered (supported and confident) do you feel in your ability to achieve your career goals?': [],
        'How connected do you feel to the AAPI community?': [],
        'Is there anything else that you would like us to consider as part of the matching process?': []
    }

  df = pd.DataFrame(matching_form_schema)

  for mentee in mentee_directory:
    new_mentee_row = {
      'Id': random.randint(0, 1000000),
      'Start time': "2021-05-01T00:00:00Z",
      'Completion time': "2021-05-01T00:00:00Z",
      'Email': mentee_directory[mentee]["Email"],
      'Name': f"{mentee_directory[mentee]['First Name']} {mentee_directory[mentee]['Last Name']}",
      'KIN Mentorship ID (Link to Spreadsheet)': mentee,
      'First Name': mentee_directory[mentee]["First Name"],
      'Last Name': mentee_directory[mentee]["Last Name"],
      'Email Address': mentee_directory[mentee]["Email"],
      'Please indicate if you have a preference for what gender your mentor/mentee is:' : random.choice(["Male", "Female", "Nonbinary/Fluid/Gender Queer", "No Preference"])
    }
    df = df.append(new_mentee_row, ignore_index=True)
    pass

  for mentor in mentor_directory:
    # TODO generate a row for them
    pass

  return df

def generate_mentor_response():
  pass

def generate_mentee_response():
  pass

def generate_rating_question():
  """This should return a number between 0 and 10"""
  return random.randint(0, 10)


# The main function should take a directory of mentors and a directory of mentees
# Other than KIN ID, First Name, Last Name, and Email, every other field in the form can be autogenerated within a certain range
# Take the mentor/mentee directory and read them into dictionaries, { KIN ID: { First Name, Last Name, Email } }
# Run Tests on those dictionaries to ensure they are properly formatted
# These dictionaries should be fed into the generate_responses function as opposed to the path to the .csv themselves
# The function should return reponses equal in length to the number of mentees and mentors

if __name__ == "__main__":
  mentee_directory = read_directory("mentee_directory_15.csv")
  mentor_directory = read_directory("mentor_directory_15.csv")
  generate_responses(mentee_directory, mentor_directory)